---
# Source: flask-application/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend-flask-application
  labels:
    helm.sh/chart: flask-application-0.1.0
    app.kubernetes.io/name: flask-application
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "v7"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: flask-application/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: backend-flask-application
  labels:
    helm.sh/chart: flask-application-0.1.0
    app.kubernetes.io/name: flask-application
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "v7"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: flask-application
    app.kubernetes.io/instance: backend
---
# Source: flask-application/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-flask-applic
  labels:
    helm.sh/chart: flask-application-0.1.0
    app.kubernetes.io/name: flask-application
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "v7"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: flask-application
      app.kubernetes.io/instance: backend
  template:
    metadata:
      labels:
        helm.sh/chart: flask-application-0.1.0
        app.kubernetes.io/name: flask-application
        app.kubernetes.io/instance: backend
        app.kubernetes.io/version: "v7"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: backend-flask-application
      containers:
        - name: flask-application
          image: "a2nadim/flask-application:1.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
